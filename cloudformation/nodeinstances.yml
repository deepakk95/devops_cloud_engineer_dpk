Description: >
  Devops Cloud Engineer / Deepak
  It will create the nodes for EKS Custer.
Parameters:
  EnvironmentName:
    Description: The environment name will be mapped to the resources.
    Default: devops-cloud-engineer-deep
    Type: String

  MinSize:
    Description: It refers to minimum set of servers.
    Default: 2
    Type: String

  DesiredSize:
    Description: It refers to number of instances that should be created.
    Default: 4
    Type: Number    

  MaxSize:
    Description: It refers to maximum set of servers.
    Default: 6
    Type: String

  KeyPairName:
    Description: KeyPairName will be used to access the Instances.
    Default: capstone
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  ServicePrincipals:
    aws-cn:
      ec2: ec2.amazonaws.com.cn
    aws-us-gov:
      ec2: ec2.amazonaws.com
    aws:
      ec2: ec2.amazonaws.com

Resources:
  RoleNodeInstance:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${EnvironmentName}-node-grp-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap [ServicePrincipals, !Ref "AWS::Partition", ec2]
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      Path: /


  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Sub ${EnvironmentName}-cluster-ng
      NodeRole: !GetAtt RoleNodeInstance.Arn
      NodegroupName: !Sub ${EnvironmentName}-nodegrp-name
      ScalingConfig:
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        DesiredSize: !Ref DesiredSize
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${EnvironmentName}-public-subnets

Outputs:
  RoleNodeInstance:
    Description: This refers to node role for instance
    Value: !GetAtt RoleNodeInstance.Arn
    Export:
      Name: !Sub ${EnvironmentName}-in-role
  NodeGroup:
    Description: This refers to node group for Amazon EKS
    Value: !Ref NodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-node-grp
